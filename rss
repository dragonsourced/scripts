#!/bin/sh

feedpath=~/.sfeed/feeds

new_of() {
    sfeed_fmt new < "$*" | wc -l
}

new_in() {
    if [ -f "$*" ]; then
        new_of "$*"
    elif [ -d "$*" ]; then
        find "$*" -type f -exec cat '{}' \; | sfeed_fmt new | wc -l
    fi
}

feeds() {
    for f in *; do
        [ -d "$f" ] && f="$f"
        n=$(new_in "$f")
        if [ "$n" -gt 0 ]; then
            echo "$f ($n new)"
        else
            echo "$f"
        fi
    done
}

strip_new() {
    echo "$*" | sed 's/ ([0-9 ]*new)$//'
}

entries() {
    n=$(new_of "$*")
    i=0
    sfeed_fmt title < "$*" | while read -r e; do
        if [ $i -lt "$n" ]; then
            echo "$e (new)"
        else
            echo "$e"
        fi
        i=$((i+1))
    done
}

OPT_MPV="Open in mpv"
OPT_AUD="Open in mpv (audio only)"
OPT_WWW="Open in web browser"
OPT_CPY="Copy link to clipboard"
OPT_DSC="View full description"
OPT_NAH="[ Cancel ]"

view_opts() {
    if [ "$media" ]; then
        if [ "$DISPLAY" ]; then
            echo "$OPT_MPV"
            echo "$OPT_AUD"
        else
            echo "$OPT_AUD"
            echo "$OPT_MPV"
        fi
    fi
    echo "$OPT_WWW"
    echo "$OPT_CPY"
    echo "$OPT_DSC"
    echo "$OPT_NAH"
}

escape() {
    echo "$*" | sed -e 's/\[/\\[/g' -e 's/\]/\\]/g' -e 's/\*/\\*/g' -e 's/\./\\./g'
}

find_line() {
    grep -n "^$(escape "$1")$" | sed 's/:.*$//' | head -1
}

line() {
    head -"$*" | tail -1
}

view_entry() {
    opt=$(view_opts | menu -i -p "$*" --mesg "$desc")

    case "$opt" in
        "$OPT_MPV") yt "$media" ;;
        "$OPT_AUD") clear; mpv --no-video "$media" ;;
        "$OPT_WWW") sensible-browser "$link" ;;
        "$OPT_CPY") echo "$link" | xsel -b ;;
        "$OPT_DSC")
            echo "$fulldesc" > /tmp/rss.desc
            st -e sensible-pager /tmp/rss.desc
            rm /tmp/rss.desc
            view_entry "$@"
            return 0 ;;
        *) return 0 ;;
    esac

    exit
}

is_media() {
    case $* in
        *youtube.com*) true ;;
        *.mp4*|*.m4a*|*.mp3*) true ;;
        *) false ;;
    esac
}

desc_fmt() {
    desc="$(echo "$*" | fmt | sed 's/\\n/\n/g')"
    if [ "$(echo "$desc" | wc -l)" -gt 7 ]; then
        echo "$desc" | head -7
        echo ...
    else
        echo "$desc"
    fi
}

view_feed() {
    feed="$*"
    n=$(new_of "$feed")
    # shellcheck disable=2086
    entry=$(strip_new "$(entries "$feed" | menu -i -p "$feed")")
    line="$(sfeed_fmt title < "$feed" | find_line "$entry")"
    [ "$line" ] || return

    fulldesc="$(sfeed_fmt content < "$feed" | line "$line")"
    desc="$(desc_fmt "$fulldesc")"
    link="$(sfeed_fmt link < "$feed" | line "$line")"

    media="$(sfeed_fmt enclosure < "$feed" | line "$line")"
    if ! [ "$media" ] && is_media "$link"; then
        media="$link"
    fi

    view_entry "$entry" && view_feed "$*"
}

selfeed() {
    p="RSS"
    [ "$PWD" != $feedpath ] && p="$(basename "$PWD")"
    # shellcheck disable=2086
    opt=$(strip_new "$(feeds | menu -i -p "$p")")
    if [ -d "$opt" ]; then
        cd "$opt" || return
        selfeed
    elif [ -f "$opt" ]; then
        view_feed "$opt"
        selfeed
    elif [ "$PWD" = $feedpath ]; then
        exit
    else
        cd ..
        selfeed
    fi
}

cd $feedpath || exit

if [ "$DISPLAY" ]; then
    ok2play && selfeed
else
    selfeed
fi
