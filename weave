#!/usr/bin/env lua

ffn = function(s) return function(...) return s:format(...) end end

local cfg = require "litcfg"

local italic = false
local bold = false
local inlinecode = false
local codeblock = false

for k, v in ipairs(cfg.keywords) do
	if not cfg.casesensitive then v = v:lower() end
	cfg.keywords[v] = k
end

local function iskeyword(w)
	if not cfg.casesensitive then w = w:lower() end
	return cfg.keywords[w] ~= nil
end

local function mkid(x)
	return x:lower():gsub("<span[^>]*>", ""):gsub("</span>", ""):gsub("<", "lt"):gsub(">", "gt"):gsub(" ", "-")
end

local function htmlesc(s)
	return s
	:gsub("&", "&amp;")
	:gsub("<", "&lt;")
	:gsub(">", "&gt;")
end

local function weave(f)
	local ln = f:read()
	while ln do
		ln = ln
		:gsub("^[^\t].*$", function(x)
			return x:gsub(cfg.fmt.secset, function(x)
				return ("[%s]{#%s .secset}"):format(x, mkid(x))
			end)
		end):gsub("^\t.*$", function(x)
			return htmlesc(x)
			:gsub("^\t", "<code>")
			:gsub("\t", ("&nbsp;"):rep(8))
			:gsub("$", "</code><br>")
			:gsub(cfg.fmt.keyword, function(x)
				if iskeyword(x) then
					return ('<span class="keyword">%s</span>'):format(x)
				else
					return x
				end
			end)
			:gsub(htmlesc(cfg.fmt.secexp), function(x)
				return ('</code><a href="#%s" class="sec">%s</a><code>')
				:format(mkid(x), x)
			end)
		end)
		print(ln)
		ln = f:read()
	end
end

if #arg > 0 then
	for _,filename in ipairs(arg) do
		local f = io.open(filename)
		if f then
			weave(f)
			f:close()
		else
			error(filename .. ": Could not open file")
		end
	end
else
	weave(io.stdin)
end

print [[

<style>
	.secset { font-style: italic; font-weight: bold; }
	.sec { font-family: serif; }
	:not(.sec) > .keyword { font-weight: bold; }
</style>
]]
