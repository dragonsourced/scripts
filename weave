#!/usr/bin/env lua

ffn = function(s) return function(...) return s:format(...) end end

local ok, cfg = pcall(require, "litcfg")
if not ok then cfg = {
	fmt = {
		secset = "^([^{}]+) :=$",
		secexp = "{([^{}]+)}",
		section = ffn "{%s}",
		lineno  = ffn "{%s:%d}",
		keyword = "[{}A-Za-z]+",
		crlf = '\n',
	},

	keywords = {
		"program", "unit", "uses",

		"interface", "implementation", "initialization", "finalization",

		"type", "var", "const",

		"procedure", "function",
		"begin", "end",
		"while", "for", "do",
		"to", "in",

		"array", "of", "record",
		"ShortInt", "LongInt", "Integer",
		"Word", "Real", "Char", "Boolean",
		"Byte", "Word",

		"true", "false",

	},

	casesensitive = false
} end


local italic = false
local bold = false
local inlinecode = false
local codeblock = false

for k, v in ipairs(cfg.keywords) do
	if not cfg.casesensitive then v = v:lower() end
	cfg.keywords[v] = k
end

local function iskeyword(w)
	if not cfg.casesensitive then w = w:lower() end
	return cfg.keywords[w] ~= nil
end

local function weave(f)
	local ln = f:read()
	while ln do
		ln = ln:gsub("^[^\t].+$", function(x)
			local r = ""
			if codeblock then r = "</pre>" end
			codeblock = false
			r = r .. x:gsub("*", function()
				italic = not italic
				if italic then return "<i>"
				else return "</i>" end
			end):gsub("`", function()
				inlinecode = not inlinecode
				if inlinecode then return "<code>"
				else return "</code>" end
			end):gsub("^#+ +.*$", function(x)
				local lvl = 0
				x:gsub("#", function() lvl = lvl + 1 end)
				x = x:gsub("^#+ +", "")
				local id = x:lower():gsub(" ", "-")
				return ("<h%d id=%q>%s</h%d>"):format(lvl, id, x, lvl)
			end)
			return r
		end):gsub("^(.*[^ ]+) *:=$", "\n<span class='secdef'>%1:</span>"
		):gsub("^\t.*$", function(x)
			local r = ""
			if not codeblock then r = "<pre>" end
			codeblock = true
			r = r .. x:sub(2):gsub(cfg.fmt.keyword, function(x)
				if iskeyword(x) then return "<span class='keyword'>" .. x
				.. "</span>" else return x end
			end):gsub(cfg.fmt.secexp, "<span class='sec'>%1</span>")
			return r
		end):gsub("^$", function()
			if codeblock then
				codeblock = false
				return "</pre>" .. cfg.fmt.crlf .. "<p>"
			else
				return cfg.fmt.crlf .. "<p>"
			end
		end)
		print(ln)
		ln = f:read()
	end
end

if #arg > 0 then
	for _,filename in ipairs(arg) do
		local f = io.open(filename)
		if f then
			weave(f)
			f:close()
		else
			error(filename .. ": Could not open file")
		end
	end
else
	weave(io.stdin)
end
