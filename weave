#!/usr/bin/env lua

local ffn = function(s) return function(...) return s:format(...) end end

local fmt = {
	secset = "^([A-Za-z ]+) :=$",
	secexp = "{([A-Za-z ]+)}",
	section = ffn "{%s}",
	lineno  = ffn "{%s:%d}",
	crlf = '\n',
}

local ln = io.read()

local italic = false
local bold = false
local inlinecode = false
local codeblock = false

local keywords = {
	"program", "unit", "uses",
	"interface", "implementation", "initialization", "finalization",
	"type", "var",
	"const", "begin", "end",
	"while", "for", "do",
	"to", "in"
}

local function iskeyword(w)
	w = w:lower()
	for _,W in ipairs(keywords) do
		if w == W then return true end
	end
	return false
end

while ln do
	ln = ln:gsub("^[^\t].+$", function(x)
		local r = ""
		if codeblock then r = "</pre>" end
		codeblock = false
		r = r .. x:gsub("*", function()
			italic = not italic
			if italic then return "<i>"
			else return "</i>" end
		end):gsub("`", function()
			inlinecode = not inlinecode
			if inlinecode then return "<code>"
			else return "</code>" end
		end)
		return r
	end):gsub("^(.*[^ ]+) *:=$", "\n%1:"
	):gsub("^\t.*$", function(x)
		local r = ""
		if not codeblock then r = "<pre>" end
		codeblock = true
		r = r .. x:gsub("%S+", function(x)
			if iskeyword(x) then return "<b>" .. x
			.. "</b>" else return x end
		end):gsub("{","<i>"):gsub("}","</i>")
		return r
	end):gsub("^$", function()
		if codeblock then
			codeblock = false
			return "</pre>\n<p>"
		else
			return "\n<p>"
		end
	end)
	print(ln)
	ln = io.read()
end
